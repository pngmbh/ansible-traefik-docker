---
- name: Converge
  hosts: all
  vars:
    ansible_python_interpreter: /opt/python/bin/python
  roles:
    - role: ansible_traefik_docker
      vars:
        # this is done in prepare.yml
        traefik_manage_ansible_dependencies: false
        traefik_docker_compose_path: /opt/bin/docker-compose
        # give it a network
        traefik_loadbalancer_network: "10.10.10.0/24"
        traefik_version: "v1.7"
        traefik_use_swarm: true
        traefik_swarm_mode: true
        traefik_compose_version: 3.2
        traefik_docker_network: "traefik"
        traefik_docker_domain: 'traefik-swarm.docker.local'
        traefik_acme_enable: false
        traefik_dashboard_basicauth_enable: false
  tasks:
    - name: Get docker networks
      command: docker network ls
      register: __networks
    - name: Show networks
      debug:
        var: __networks.stdout_lines
    - name: start test web server
      docker_swarm_service:
        name: testhttp
        image: deis/example-go
        networks:
          - "{{ traefik_docker_network }}"
        labels:
          test: webserver
          traefik.enable: "true"
          traefik.port: "8080"
          traefik.docker.network: "{{ traefik_docker_network }}"
    - name: Restart traefik
      command:
        cmd: docker service update --force traefik_traefik
    - name: Try connection
      command:
        argv:
          - wget
          - --no-check-certificate
          - --header="Host:traefik.traefik-swarm.docker.local"
          - https://127.0.0.1:443/api/providers/docker
      ignore_errors: true
      register: wget_test
      failed_when: false
      tags:
        - skip_ansible_lint
    - name: Show output
      debug:
        var: wget_test
    - name: Restart traefik
      command:
        cmd: docker service update --force traefik_traefik
    - name: Wait for traefik to come up
      wait_for:
        port: 80
