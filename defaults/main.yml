---
traefik_version: "v1.7.34"
traefik_directory: "/opt/traefik"
traefik_compose: "{{ traefik_directory }}/docker-compose.yml"
traefik_compose_version: 2

traefik_debug_enable: false
traefik_log_level: "WARNING"

traefik_image: "traefik"

# Main configuration
traefik_docker_network: "public"

# Dashboard
traefik_dashboard_enable: true
traefik_dashboard_entrypoint_port: 8080
traefik_dashboard_subdomain: "traefik"
traefik_dashboard_fqdn: "{{ traefik_dashboard_subdomain }}.{{ traefik_docker_domain }}"
traefik_dashboard_basicauth_enable: true
traefik_dashboard_basicauth_users: []
traefik_dashboard_fwdauth_server: ""

# Docker
traefik_docker_domain: "{{ inventory_hostname }}"
traefik_docker_expose_by_default: false

# Enable automatic certificates from Let's Encrypt
traefik_acme_enable: true
traefik_acme_autocreate_from_host: true
traefik_acme_email: "admin@mydomain.org"
traefik_acme_use_staging_ca: true

# Compose, or Swarm?
traefik_use_swarm: false
# Switch this on for multi-node swarm clusters.
# With it on, traefik will *only* recognize docker swarm services,
# not single containers.
traefik_swarm_mode: false
traefik_swarm_network_driver: "overlay"
traefik_swarm_network_attachable: true

# Whatever Ansible needs to execute this role
# If you're doing it otherwise, you can set this to false
traefik_manage_ansible_dependencies: true

# dependening on 'context' (root/non-root and Linux flavor)
traefik_docker_compose_path: "docker compose"

# PROXY protocol
traefik_loadbalancer_network: ""
